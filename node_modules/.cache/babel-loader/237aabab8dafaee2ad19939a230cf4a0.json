{"ast":null,"code":"import { createStore } from 'redux'; // import { connect } from 'react-redux'\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n}; // const countReducer = (state = initialState, action) => {\n//     debugger;\n//     if(action.type == 'INC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + 1\n//         } \n//     }\n//     if(action.type == 'DEC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter - 1\n//         } \n//     }\n//     if(action.type == 'INCREASE') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + action.amount\n//         } \n//     }\n//     if(action.type == 'TOGGLE') {\n//         debugger;\n//         return {\n//             counter : state.counter,\n//             showCounter: !state.showCounter,\n//         } \n//     }\n//     return state;\n// }\n// const store = createStore(countReducer);\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      debugger;\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["/Users/admin/Desktop/Redux-Folder/redux-starting-project/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggle","store","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B,C,CACA;;AAEA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACV;AACAA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAbK;AAHmB,CAAD,CAAhC;AAoBA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADG,CAAD,CAA5B;AAMA,eAAeD,KAAf","sourcesContent":["import {createStore} from 'redux';\n// import { connect } from 'react-redux'\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = {counter: 0, showCounter: true}\n\n// const countReducer = (state = initialState, action) => {\n//     debugger;\n//     if(action.type == 'INC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + 1\n//         } \n//     }\n//     if(action.type == 'DEC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter - 1\n//         } \n//     }\n\n//     if(action.type == 'INCREASE') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + action.amount\n//         } \n//     }\n\n//     if(action.type == 'TOGGLE') {\n//         debugger;\n//         return {\n            \n//             counter : state.counter,\n//             showCounter: !state.showCounter,\n//         } \n//     }\n\n//     return state;\n// }\n\n// const store = createStore(countReducer);\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++\n        },\n        decrement(state) {\n            state.counter--\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggle(state) {\n            debugger;\n            state.showCounter = !state.showCounter\n        }  \n    }\n})\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}
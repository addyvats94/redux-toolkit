{"ast":null,"code":"import { createStore } from 'redux'; // import { connect } from 'react-redux'\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport counterSlice from './counterReducer';\nimport { authSlice, authSliceAction } from \"./authReducer\"; // const initialState = {counter: 0, showCounter: true}\n// const countReducer = (state = initialState, action) => {\n//     debugger;\n//     if(action.type == 'INC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + 1\n//         } \n//     }\n//     if(action.type == 'DEC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter - 1\n//         } \n//     }\n//     if(action.type == 'INCREASE') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + action.amount\n//         } \n//     }\n//     if(action.type == 'TOGGLE') {\n//         debugger;\n//         return {\n//             counter : state.counter,\n//             showCounter: !state.showCounter,\n//         } \n//     }\n//     return state;\n// }\n// const store = createStore(countReducer);\n// const counterSlice = createSlice({\n//     name: 'counter',\n//     initialState,\n//     reducers: {\n//         increment(state) {\n//             state.counter++\n//         },\n//         decrement(state) {\n//             state.counter--\n//         },\n//         increase(state, action) {\n//             state.counter = state.counter + action.payload;\n//         },\n//         toggle(state) {\n//             debugger;\n//             state.showCounter = !state.showCounter\n//         }  \n//     }\n// })\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice,\n    auth: authSlice\n  }\n}); // export const counterSliceActions = counterSlice.actions;\n\nexport default store;","map":{"version":3,"sources":["/Users/admin/Desktop/Redux-Folder/redux-starting-project/src/store/index.js"],"names":["createStore","createSlice","configureStore","counterSlice","authSlice","authSliceAction","store","reducer","counter","auth"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B,C,CACA;;AAEA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,eAA3C,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AACzBK,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEL,YADJ;AAELM,IAAAA,IAAI,EAAEL;AAFD;AADgB,CAAD,CAA5B,C,CAOA;;AAEA,eAAeE,KAAf","sourcesContent":["import {createStore} from 'redux';\n// import { connect } from 'react-redux'\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport counterSlice from './counterReducer';\nimport { authSlice, authSliceAction } from \"./authReducer\";\n\n// const initialState = {counter: 0, showCounter: true}\n\n// const countReducer = (state = initialState, action) => {\n//     debugger;\n//     if(action.type == 'INC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + 1\n//         } \n//     }\n//     if(action.type == 'DEC') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter - 1\n//         } \n//     }\n\n//     if(action.type == 'INCREASE') {\n//         return {\n//             showCounter: state.showCounter,\n//             counter : state.counter + action.amount\n//         } \n//     }\n\n//     if(action.type == 'TOGGLE') {\n//         debugger;\n//         return {\n            \n//             counter : state.counter,\n//             showCounter: !state.showCounter,\n//         } \n//     }\n\n//     return state;\n// }\n\n// const store = createStore(countReducer);\n\n// const counterSlice = createSlice({\n//     name: 'counter',\n//     initialState,\n//     reducers: {\n//         increment(state) {\n//             state.counter++\n//         },\n//         decrement(state) {\n//             state.counter--\n//         },\n//         increase(state, action) {\n//             state.counter = state.counter + action.payload;\n//         },\n//         toggle(state) {\n//             debugger;\n//             state.showCounter = !state.showCounter\n//         }  \n//     }\n// })\n\nconst store = configureStore({\n    reducer: {\n        counter: counterSlice,\n        auth: authSlice\n    }\n});\n\n// export const counterSliceActions = counterSlice.actions;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}